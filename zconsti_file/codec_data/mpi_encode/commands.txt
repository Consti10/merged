// the default test file from rkmedia
adb push mpp_enc_test_320_240.nv12 /userdata/mpp_enc_test_320_240.nv12

// generate raw file from camera (this file is placed here,too). 1080p nv12 
./rkmedia_vi_get_frame_test -a -o /userdata/raw.nv12 -c 120
 
 
 // h264
./mpi_enc_test -i /userdata/mpp_enc_test_320_240.nv12 -o /userdata/mpp_enc_test_320_240.h264 -w 320 -h 240 -f NV12 -t 7 -r 120 
// stored here adb pull /userdata/mpp_enc_test_320_240.h264
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/t1.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120
// stored here adb pull /userdata/t1.h264


// h265
./mpi_enc_test -i /userdata/mpp_enc_test_320_240.nv12 -o /userdata/mpp_enc_test_320_240.h265 -w 320 -h 240 -f NV12 -t 16777220 -r 120 
// stored here: adb pull /userdata/mpp_enc_test_320_240.h265
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/t1.h265 -w 1920 -h 1080 -f NV12 -t 16777220 -r 120
// stored here: adb pull /userdata/t1.h265
 

// modify mpi_enc_test to test the behaviour when setting various (h264) encoding parameters
// test 1: check split mode
export split_mode=1
export split_arg=1024
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/t_x1.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120
// stored here adb pull /userdata/t_x1.h264 

// test 2: check gop intervall
// from mpi_enc_utils gop_mode:gop_len:vi_len
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/t_x2.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120 -g 0:1:0
// stored here adb pull /userdata/t_x2.h264


// test 3: set these 2 (log2_max_frame_num_minus4,log2_max_poc_lsb_minus4) to 1 by environment variable
export consti10_poc=1
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/t_x3.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120
adb pull /userdata/t_x3.h264

// test 4
// added (hard_coded) gaps_not allowed (note: flag in sps should be 0(same as dji=> gaps NOT allowed)
export consti10_poc=1
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/t_x4.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120
adb pull /userdata/t_x4.h264


// test 5 additionally to test 4(same, no gaps, 1 for 2 values) also use a gop of 1
export consti10_poc=1
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/t_x5.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120 -g 0:1:0
adb pull /userdata/t_x5.h264




  ./mpi_enc_test -i mpp_enc_test_320_240.nv12 -o t1.h264 -w 320 -h 240 -f NV12 -t 7
 ./mpi_enc_test -i rec1.nv12 -o t2.h264 -w 1920 -h 1080 -f NV12 -t 7
 
 ./mpi_dec_test -i t2.h264 -o /dev/null --debug 2



// play back the .h264 with gstreamer:
gst-launch-1.0 -v filesrc location=/media/consti10/ade719d9-e80a-46da-8802-58ca3b8e08bc/merged/zconsti_file/codec_data/mpi_encode/t1.h264 ! h264parse ! decodebin ! autovideosink
gst-launch-1.0 -v filesrc location=/media/consti10/ade719d9-e80a-46da-8802-58ca3b8e08bc/merged/zconsti_file/codec_data/mpi_encode/t1.h265 ! h265parse ! decodebin ! autovideosink

//usefull: export h264e_debug=3
//one can find them all here:external/mpp/mpp/codec/enc/h264/h264e_debug.h
export h264e_debug=0x00000100

//from hal
export dump_l1_reg=1


// -------------------
using mpp directly for streaming (isp running in a different terminal)
./consti_run_isp -f 90
./mpi_enc_test -i /dev/video19 -m 100 -o /userdata/cam1.h264 -t 7 -r 120 -w 1920 -h 1080
adb pull /userdata/cam1.h264

//------------------
// set poc_type=2 with ammend stuff
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/tx1.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120
-> mpp[1252]: hal_h264e_vepu541: h264e_amend 23793 23793
adb pull /userdata/tx1.h264

// not setting poc_type=2 with ammend stuff (works)
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/tx2.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120
no ammend
adb pull /userdata/tx2.h264

// setting poc_type=2 with ammend, after also adding the one mising ammend method
./mpi_enc_test -i /userdata/raw.nv12 -o /userdata/tx3.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120
adb pull /userdata/tx3.h264

// poc_type=2 once again, but this time the data comes from the camera:
./mpi_enc_test -i /dev/video19 -o /userdata/tx4.h264 -w 1920 -h 1080 -f NV12 -t 7 -r 120
adb pull /userdata/tx4.h264









